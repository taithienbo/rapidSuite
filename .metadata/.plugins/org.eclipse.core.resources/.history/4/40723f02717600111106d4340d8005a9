package graphs;

import org.achartengine.ChartFactory;
import org.achartengine.chart.BarChart.Type;
import org.achartengine.model.CategorySeries;
import org.achartengine.model.XYMultipleSeriesDataset;
import org.achartengine.renderer.XYMultipleSeriesRenderer;
import org.achartengine.renderer.XYSeriesRenderer;

import report.Report;
import android.content.Context;
import android.content.Intent;
public class BarGraph
{

	private Report report;

	public BarGraph (Report report)
	{
		this.report = report;
	}

	public Intent getIntent (Context context)
	{
		float[] revenues = new float[12];
		
		String[] x_axis = new String[]{"January", "Feburary", "March", "April", "May",
				"June", "July", "August", "September", "October", "November", "December"};
		

		revenues[0] = report.getJanRev();
		revenues[1] = report.getFebRev();
		revenues[2] = report.getMarRev();
		revenues[3] = report.getAprRev();
		revenues[4] = report.getMayRev();
		revenues[5] = report.getJunRev();
		revenues[6] = report.getJulRev();
		revenues[7] = report.getAugRev();
		revenues[8] = report.getSepRev();
		revenues[9] = report.getOctRev();
		revenues[10] = report.getNovRev();
		revenues[11] = report.getDecRev();


		CategorySeries series = new CategorySeries (report.getYear() + "Report");
		for (int i = 0; i < revenues.length; i++)
		{
			series.add(x_axis[i], revenues[i]);
		}
		
		// think of it as an object that hold a list of series
		XYMultipleSeriesDataset dataset = new XYMultipleSeriesDataset();
		
	
		dataset.addSeries(series.toXYSeries());
		
		// Customize the graph as a whole
		XYMultipleSeriesRenderer mRenderer = new XYMultipleSeriesRenderer();
		mRenderer.setChartTitle(report.getYear() + " Report");
		mRenderer.setXTitle("Month");
		mRenderer.setYTitle("Revenue");
		
		// One series has one renderer
		XYSeriesRenderer renderer = new XYSeriesRenderer();
		
		// Customizations
		renderer.setDisplayChartValues(true);
		renderer.setChartValuesSpacing((float) 1.0);
		mRenderer.addSeriesRenderer(renderer);
		
		Intent intent = ChartFactory.getBarChartIntent(context, dataset,
				mRenderer, Type.DEFAULT);
		
		
		
		
		return intent;
	}
}
